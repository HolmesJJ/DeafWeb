// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectData;

namespace ProjectData.Migrations
{
    [DbContext(typeof(ProjectContext))]
    partial class ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectData.Models.Assistant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserStatus")
                        .HasDefaultValue("IsValidated")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("LoginTimes")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Assistant");
                });

            modelBuilder.Entity("ProjectData.Models.English", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Detail")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("English");
                });

            modelBuilder.Entity("ProjectData.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IsStart")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("ProjectData.Models.Progress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EnglishId");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("date");

                    b.Property<int?>("UserId");

                    b.Property<int?>("Grade");

                    b.HasKey("Id");

                    b.HasIndex("EnglishId");

                    b.HasIndex("UserId");

                    b.ToTable("Progress");
                });

            modelBuilder.Entity("ProjectData.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("EnglishId");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("EnglishId");

                    b.HasIndex("UserId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("ProjectData.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("ProjectData.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Age")
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("AssistantId");

                    b.Property<string>("Gender")
                        .HasColumnType("char(1)");

                    b.Property<string>("Hearing")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Profile")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("JumpForFunScore");

                    b.Property<int?>("CubeHubScore");

                    b.Property<string>("UserStatus")
                        .HasDefaultValue("IsValidated")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("LoginTimes")
                        .HasDefaultValue(0);

                    b.Property<string>("DeviceId")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ValidationCode")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("ExpiredTime");

                    b.HasKey("Id");

                    b.HasIndex("AssistantId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ProjectData.Models.English", b =>
                {
                    b.HasOne("ProjectData.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("ProjectData.Models.Progress", b =>
                {
                    b.HasOne("ProjectData.Models.English", "English")
                        .WithMany()
                        .HasForeignKey("EnglishId");

                    b.HasOne("ProjectData.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ProjectData.Models.Schedule", b =>
                {
                    b.HasOne("ProjectData.Models.English", "English")
                        .WithMany()
                        .HasForeignKey("EnglishId");

                    b.HasOne("ProjectData.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ProjectData.Models.User", b =>
                {
                    b.HasOne("ProjectData.Models.Assistant", "Assistant")
                        .WithMany()
                        .HasForeignKey("AssistantId");
                });
#pragma warning restore 612, 618
        }
    }
}
